{"version":3,"sources":["components/ruleta/audio/Astronomia.mp3","components/siderbar/assets/img/ficha.svg","components/siderbar/assets/img/gana.svg","components/siderbar/assets/img/negocio.svg","components/siderbar/assets/img/apilar.svg","components/siderbar/assets/sound/mario-coin.mp3","components/siderbar/assets/sound/010707105_prev.mp3","components/siderbar/assets/sound/button-3.mp3","components/ruleta/audio/champions.mp3","components/ruleta/img/felicidades-animadas.gif","components/ruleta/img/negros.gif","components/ruleta/audio/exorcist.mp3","components/ruleta/audio/guile-theme.mp3","components/ruleta/audio/psycho.mp3","components/ruleta/audio/careless-whisper.mp3","components/ruleta/audio/xfile.mp3","reducers/participantesReducers.js","reducers/index.js","actions/participantes/types.js","store/index.js","components/siderbar/HeaderSiderbar.js","actions/participantes/Actions.js","components/siderbar/Siderbar.js","components/siderbar/Participante.js","components/siderbar/ListaParticipantes.js","components/ruleta/Ruleta.js","components/ruleta/RuletaContainer.js","components/Viruleta/Viruleta.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","initialState","listaparticipantes","arrayParticipantes","i","push","nro","nombres","monto","ganacia","isselecionado","getlistadoParticipantes","multiplicador","modojuego","combineReducers","participantes","state","action","type","map","participante","payload","parseInt","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","HeaderSiderbar","useState","montoview","setMontoView","dispatch","useDispatch","actualizarMontoAction","a","actualizarMonto","actualizarTipoJuegoAction","factor","actualizarTipoJuego","useSelector","className","htmlFor","id","onChange","e","target","value","valor","trim","placeholder","Siderbar","children","beep","UIfx","tickAudio","quitarMon","quitarMoneda","Participante","focus","activadoDinero","setActivadoDinero","nombresParticipante","setnombresParticipante","editarParticipantes","seteditarParticipantes","mostrarMontos","setmostrarMontos","inputEl","useRef","useEffect","init","actualizarNombreAction","nombre","actualizarJuegoAction","actualizarJuego","desactivarEditarParticipante","onMouseEnter","onMouseLeave","onClickOutside","ref","onKeyPress","key","onClick","tabIndex","data-toggle","title","src","imgApuesta","imgGana","apilar","equix","play","ListaParticipantes","window","Winwheel","$","championsSound","champions","AstronomiaSound","Astronomia","Ruleta","winningSegment","ctx","theWheel","setMostrarGanador","ganador","setganador","estadoGanador","setestadoGanador","setNro","img","setImg","distnaciaX","distnaciaY","crearRuleta","DibujarTriangulo","playSound","audio","Audio","console","log","pause","currentTime","strokeStyle","fillStyle","lineWidth","beginPath","moveTo","lineTo","stroke","fill","alertPrize","getIndicatedSegment","demoId","document","getElementById","text","classList","negros","addClass","felicitaciones","textContent","modal","location","reload","data-target","startAnimation","width","height","data-responsiveMinWidth","data-responsiveScaleHeight","data-responsiveMargin","data-backdrop","data-keyboard","role","aria-labelledby","aria-hidden","data-dismiss","aria-label","exorcistSound","exorcist","guileSound","guile","psychoSound","psycho","sensualSound","sensual","xfileSound","xfile","RuletaContainer","sound","aria-controls","aria-expanded","href","aria-haspopup","Viruleta","App","Boolean","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.f3c2177d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Astronomia.8a4c0340.mp3\";","module.exports = __webpack_public_path__ + \"static/media/ficha.8b46caef.svg\";","module.exports = __webpack_public_path__ + \"static/media/gana.014842b6.svg\";","module.exports = __webpack_public_path__ + \"static/media/negocio.c0a78269.svg\";","module.exports = __webpack_public_path__ + \"static/media/apilar.93436ef2.svg\";","module.exports = __webpack_public_path__ + \"static/media/mario-coin.1b03af4c.mp3\";","module.exports = __webpack_public_path__ + \"static/media/010707105_prev.dab6940b.mp3\";","module.exports = __webpack_public_path__ + \"static/media/button-3.1a4dfbf9.mp3\";","module.exports = __webpack_public_path__ + \"static/media/champions.8b46378c.mp3\";","module.exports = __webpack_public_path__ + \"static/media/felicidades-animadas.4d1ff35b.gif\";","module.exports = __webpack_public_path__ + \"static/media/negros.5b035fb1.gif\";","module.exports = __webpack_public_path__ + \"static/media/exorcist.78956a31.mp3\";","module.exports = __webpack_public_path__ + \"static/media/guile-theme.ca00c34e.mp3\";","module.exports = __webpack_public_path__ + \"static/media/psycho.fb98aa57.mp3\";","module.exports = __webpack_public_path__ + \"static/media/careless-whisper.a1def28a.mp3\";","module.exports = __webpack_public_path__ + \"static/media/xfile.0c8c7857.mp3\";","import {\r\n    LISTAR_JUGADORES, ACTIVAR_PAGADO, ACTUALIZAR_JUGADOR,ACTUALIZAR_MONTO,ACTUALIZAR_TIPO_JUEGO,ACTUALIZAR_NOMBRE_JUGADOR,ACTUALIZAR_JUEGO\r\n}\r\n    from '../actions/participantes/types';\r\n\r\nconst cantParticipantes=15;\r\n\r\n// cada reducer tiene su propio state\r\nconst getlistadoParticipantes = () => {\r\n    let arrayParticipantes = [];\r\n    for (var i = 1; i <= cantParticipantes; i++) {\r\n        arrayParticipantes.push(\r\n            {nro: i, nombres: 'NINGUNO', monto: 1, ganacia: 10, isselecionado: false}\r\n        )\r\n    }\r\n    return arrayParticipantes;\r\n}\r\n\r\n\r\nconst initialState = {\r\n    listaparticipantes: getlistadoParticipantes(),\r\n    monto:1,\r\n    multiplicador:10,\r\n    modojuego:'Regular'\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n\r\n    switch (action.type) {\r\n        case LISTAR_JUGADORES:\r\n            return {\r\n                ...state\r\n            }\r\n        case ACTUALIZAR_JUGADOR:\r\n            return {\r\n                ...state,\r\n                listaparticipantes: state.listaparticipantes.map(\r\n                    participante => participante.nro === action.payload.nro\r\n                        ? (participante = action.payload)\r\n                        : participante\r\n                )\r\n            }\r\n        case ACTUALIZAR_MONTO:\r\n            //alert(action.payload)\r\n            return {\r\n                ...state,\r\n                monto: action.payload,\r\n                listaparticipantes: state.listaparticipantes.map( participante =>  {\r\n                     participante.monto=action.payload;\r\n                    participante.ganacia=action.payload*state.multiplicador;\r\n                     return participante;\r\n                })\r\n                \r\n            }\r\n\r\n        case ACTUALIZAR_TIPO_JUEGO:\r\n            //alert(action.payload)\r\n            return {\r\n                ...state,\r\n                multiplicador: action.payload\r\n                ,\r\n                listaparticipantes: state.listaparticipantes.map( participante =>  {\r\n                  //  participante.monto=action.payload;\r\n                    participante.ganacia=state.monto*action.payload;\r\n                    return participante;\r\n                })\r\n\r\n            }\r\n\r\n        case ACTUALIZAR_NOMBRE_JUGADOR:\r\n            //alert(action.payload)\r\n            return {\r\n                ...state,\r\n                listaparticipantes: state.listaparticipantes.map( participante =>  {\r\n                   // console.log(participante)\r\n                   // console.log(action.payload)\r\n                    if(parseInt(participante.nro)==parseInt(action.payload.nro)) {\r\n                     \r\n                        participante.nombres=action.payload.nombres;\r\n                    }\r\n                    return participante;\r\n                })\r\n\r\n            }\r\n\r\n        case ACTUALIZAR_JUEGO:\r\n            //alert(action.payload)\r\n            return {\r\n                ...state,\r\n                listaparticipantes: state.listaparticipantes.map( participante =>  {\r\n                    // console.log(participante)\r\n                    // console.log(action.payload)\r\n                    if(parseInt(participante.nro)==parseInt(action.payload.nro)) {\r\n                        participante.isselecionado=action.payload.isselecionado;\r\n                    }\r\n                    return participante;\r\n                })\r\n\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import {combineReducers} from 'redux';\r\nimport participantesReducers from './participantesReducers';\r\n\r\n\r\nexport default combineReducers({\r\n    participantes: participantesReducers,\r\n  \r\n});","export const LISTAR_JUGADORES = 'LISTAR_JUGADORES';\r\nexport const ACTIVAR_PAGADO = 'ACTIVAR_PAGADO';\r\nexport const ACTUALIZAR_JUGADOR = 'ACTIVAR_PAGADO';\r\nexport const ACTUALIZAR_MONTO = 'ACTUALIZAR_MONTO';\r\nexport const ACTUALIZAR_TIPO_JUEGO = 'ACTUALIZAR_TIPO_JUEGO';\r\nexport const ACTUALIZAR_NOMBRE_JUGADOR = 'ACTUALIZAR_NOMBRE_JUGADOR';\r\nexport const ACTUALIZAR_JUEGO = 'ACTUALIZAR_JUEGO';","import { createStore, applyMiddleware, compose} from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport rootReducer from '../reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n    rootReducer, \r\n    initialState,\r\n    compose(applyMiddleware(...middleware)\r\n     /*   , window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()*/\r\n) );\r\n\r\nexport default store;","import React, {useEffect, useState} from 'react';\r\n\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {actualizarMonto, actualizarTipoJuego} from \"../../actions/participantes/Actions\";\r\n\r\nconst HeaderSiderbar = () => {\r\n\r\n\r\n    const [montoview, setMontoView] = useState(1);\r\n\r\n    /*================VINCULADO A FUNCIONES LOCALES LOS ACTIONS===============*/\r\n    const dispatch = useDispatch();\r\n    const actualizarMontoAction = (monto) => dispatch(actualizarMonto(monto));\r\n    const actualizarTipoJuegoAction = (factor) => dispatch(actualizarTipoJuego(factor));\r\n\r\n    /*================OBTENIENDO LOS ESTADOS DEL LOS REDUCERS==================================*/\r\n    const monto = useSelector(state => state.participantes.monto);\r\n\r\n\r\n    const cambiarMonto = (e) => {\r\n        // alert(e.target.value)\r\n        let valor = e.target.value.trim() == 0 ? 1 : e.target.value;\r\n        setMontoView(e.target.value);\r\n        actualizarMontoAction(valor);\r\n    }\r\n\r\n    const cambiarTipoJuego = (e) => {\r\n\r\n        if (e.target.value === '1') {\r\n\r\n            actualizarTipoJuegoAction(10)\r\n        }\r\n        if (e.target.value === '3') {\r\n\r\n            actualizarTipoJuegoAction(5)\r\n        }\r\n        if (e.target.value === '2') {\r\n\r\n            actualizarTipoJuegoAction(15)\r\n        }\r\n        //alert()\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"sidebar-sticky pt-3\">\r\n                <form>\r\n                    <div className=\"form-row align-items-center\">\r\n\r\n                        <div className=\"col-lg-6\">\r\n                            <label htmlFor=\"firstName\"> Modo</label>\r\n                            <select className=\"form-control custom-select mr-sm-2\" id=\"inlineFormCustomSelect\"\r\n                                    onChange={cambiarTipoJuego}>\r\n\r\n\r\n                                <option value=\"1\">Regular</option>\r\n                                <option value=\"3\">Promoción</option>\r\n                                <option value=\"2\">Apagon</option>\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"col-lg-6\">\r\n                            <label htmlFor=\"firstName\"> S/.</label>\r\n                            <input type=\"text\" className=\"form-control\" value={montoview} onChange={cambiarMonto}\r\n                                   placeholder=\"Monto de Juego\"/>\r\n                        </div>\r\n\r\n                    \r\n\r\n\r\n                    </div>\r\n                </form>\r\n\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default HeaderSiderbar;","import {\r\n    ACTUALIZAR_JUGADOR,ACTIVAR_PAGADO,LISTAR_JUGADORES,ACTUALIZAR_MONTO,ACTUALIZAR_TIPO_JUEGO,ACTUALIZAR_NOMBRE_JUGADOR,ACTUALIZAR_JUEGO\r\n} from './types';\r\n\r\n\r\nexport const listarjugadores = () => async dispatch => {\r\n \r\n    dispatch({\r\n        type: LISTAR_JUGADORES,\r\n        payload: null\r\n    })\r\n}\r\n\r\nexport const actualizarjugadores = jugador => async dispatch => {\r\n   \r\n    dispatch({\r\n        type: ACTUALIZAR_JUGADOR,\r\n        payload: jugador\r\n    })\r\n}\r\n\r\nexport const actualizarMonto = monto => async dispatch => {\r\n    //alert(monto)\r\n    dispatch({\r\n        type: ACTUALIZAR_MONTO,\r\n        payload: monto\r\n    })\r\n}\r\n\r\nexport const actualizarTipoJuego = factor => async dispatch => {\r\n    dispatch({\r\n        type: ACTUALIZAR_TIPO_JUEGO,\r\n        payload: factor\r\n    })\r\n}\r\n\r\nexport const actualizarNombre = nombre => async dispatch => {\r\n    dispatch({\r\n        type: ACTUALIZAR_NOMBRE_JUGADOR,\r\n        payload: nombre\r\n    })\r\n}\r\n\r\nexport const actualizarJuego  = participante => async dispatch => {\r\n    dispatch({\r\n        type: ACTUALIZAR_JUEGO,\r\n        payload: participante\r\n    })\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport HeaderSiderbar from \"./HeaderSiderbar\";\r\n\r\n\r\nconst Siderbar = ({children}) => {\r\n    \r\n    return (\r\n        <>\r\n            <nav id=\"sidebarMenu\" className=\"col-md-4 col-lg-3 d-md-block bg-light sidebar collapse\">\r\n                <HeaderSiderbar/>\r\n                {children}\r\n            </nav>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Siderbar;","import React, {useEffect, useState,useRef } from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport { actualizarNombre,actualizarJuego} from \"../../actions/participantes/Actions\";\r\nimport UIfx from 'uifx';\r\nimport ClickOutside from 'react-click-outside'\r\nimport imgApuesta from './assets/img/ficha.svg'\r\nimport imgGana from './assets/img/gana.svg'\r\nimport equix from './assets/img/negocio.svg';\r\nimport apilar from './assets/img/apilar.svg';\r\nimport tickAudio from './assets/sound/mario-coin.mp3';\r\nimport quitarMoneda from './assets/sound/010707105_prev.mp3';\r\nimport focus from './assets/sound/button-3.mp3';\r\n\r\nconst beep = new UIfx(tickAudio);\r\nconst quitarMon = new UIfx(quitarMoneda);\r\nconst focusSound = new UIfx(focus);\r\n\r\n\r\nconst Participante = ({nro,nombres,monto,ganacia,isselecionado}) => {\r\n\r\n   \r\n\r\n    const [activadoDinero, setActivadoDinero] = useState(false);\r\n    const [nombresParticipante, setnombresParticipante] = useState(false);\r\n    const [editarParticipantes, seteditarParticipantes] = useState(false);\r\n    const [mostrarMontos, setmostrarMontos] = useState(false);\r\n    //const [inputref, setmostrarMontos] = useRef(null);\r\n    const inputEl = useRef(null);\r\n \r\n\r\n\r\n    useEffect(() => {\r\n        const init = async () => {\r\n            setnombresParticipante(nombres);\r\n           \r\n        };\r\n        init();\r\n\r\n\r\n    }, []);\r\n\r\n    /*================VINCULADO A FUNCIONES LOCALES LOS ACTIONS===============*/\r\n    const dispatch = useDispatch();\r\n    const actualizarNombreAction = (participante) => dispatch(actualizarNombre(participante));\r\n    const actualizarJuegoAction = (participante) => dispatch(actualizarJuego(participante));\r\n    \r\n\r\n    const activarPago=()=>{\r\n        \r\n        !activadoDinero ? beep.play()  : quitarMon.play()\r\n        setActivadoDinero(!activadoDinero);\r\n        actualizarJuegoAction({nro,isselecionado:!activadoDinero});\r\n       \r\n    }\r\n\r\n    const activarEditarParticipante=()=>{\r\n      //  e.target.select();\r\n        seteditarParticipantes(true)\r\n      \r\n        //inputEl.current.focus();\r\n\r\n    }\r\n\r\n    const desactivarEditarParticipante=()=>{\r\n        seteditarParticipantes(false)\r\n\r\n    }\r\n\r\n    const editarNombre=(e)=>{\r\n        \r\n        \r\n        if(e.target.value.trim()===''){\r\n            setnombresParticipante('NINGUNO');\r\n            actualizarNombreAction({nro,nombres:'NINGUNO'});\r\n          \r\n          \r\n        }else{\r\n            setnombresParticipante(e.target.value);\r\n            actualizarNombreAction({nro,nombres:e.target.value});\r\n        }\r\n      \r\n       \r\n\r\n    }\r\n\r\n    const MostrarMontos=(e)=>{\r\n      setmostrarMontos(true)\r\n\r\n    }\r\n    const NoMostrarMontos=(e)=>{\r\n        setmostrarMontos(false)\r\n\r\n    }\r\n    \r\n    \r\n    return (\r\n        <>\r\n            <li onMouseEnter={MostrarMontos} onMouseLeave={NoMostrarMontos} id={`container_${nro}`} className=\"list-group-item d-flex justify-content-between lh-condensed participante\" >\r\n                <div className=\"row\" >\r\n                    <div className=\"col-lg-2\">\r\n                        <h1 className=\"numero-participante\">{nro}</h1>\r\n                    </div>\r\n                    <div className=\"col-lg-8\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-12 content-name-participante\">\r\n                                { !editarParticipantes? <label id={nro}  onClick={activarEditarParticipante}  className={`nomb-participante ${activadoDinero ? 'dinero': 'sindinero'} ${ganacia}`}>   {nombresParticipante} </label> :\r\n                                    <ClickOutside onClickOutside={desactivarEditarParticipante}>  \r\n                                        <input ref={inputEl} onKeyPress={(e)=>{ if(e.key === 'Enter')  desactivarEditarParticipante()   }}  className=\"nombre-participante\" onChange={editarNombre} value={nombresParticipante}/>\r\n                                    </ClickOutside>\r\n                                \r\n                                }\r\n                                \r\n                                \r\n                            </div>\r\n                            <div className=\"col-lg-12\">\r\n                                { mostrarMontos ?\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-lg-6\">\r\n                                                    <span className=\"d-inline-block\" tabIndex=\"0\" data-toggle=\"tooltip\"\r\n                                                          title=\"JUEGA\">\r\n                                                        <img src={imgApuesta} className=\"ficha-participante\"></img>\r\n                                                        <label className=\"dinero\">S/. {monto}\r\n                                                        </label>\r\n                                                    </span>\r\n                                        </div>\r\n                                        <div className=\"col-lg-6\">\r\n                                                    <span className=\"d-inline-block\" tabIndex=\"0\" data-toggle=\"tooltip\"\r\n                                                          title=\"GANA !!!\">\r\n                                                        <img src={imgGana} className=\"ficha-participante\"></img>\r\n                                                        <label className={`dinero ${activadoDinero? 'activadodinero': ''}` } >S/. {ganacia}\r\n                                                        </label>\r\n                                                    </span>\r\n                                        </div>\r\n                                    </div>\r\n                                    : null\r\n                                \r\n                                \r\n                                }\r\n                               \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-lg-2\">\r\n                        <img src={!activadoDinero ? equix : apilar} onClick={activarPago} className=\"activatePago\"></img>\r\n                    </div>\r\n                </div>\r\n            </li>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Participante;\r\n\r\n","import React from 'react';\r\nimport Participante from \"./Participante\";\r\nimport {useDispatch, useSelector} from 'react-redux';\r\n\r\nconst ListaParticipantes = () => {\r\n    const listaparticipantes = useSelector(state => state.participantes.listaparticipantes);\r\n    return (\r\n        <>\r\n            <div className=\"titulo-participantes\">\r\n                <label htmlFor=\"firstName\"> Participantes</label>\r\n            </div>\r\n            <ul className=\"list-group mb-3\">\r\n                {\r\n                    listaparticipantes.map(participante=>\r\n                        <Participante {...participante} /> \r\n                    )\r\n                }\r\n              \r\n            </ul>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ListaParticipantes;","import React, {useEffect, useState} from 'react';\r\nimport champions from './audio/champions.mp3';\r\nimport felicitaciones from './img/felicidades-animadas.gif';\r\nimport negros from './img/negros.gif';\r\nimport UIfx from 'uifx';\r\nimport Astronomia from \"./audio/Astronomia.mp3\";\r\n\r\nconst {Winwheel, $} = window;\r\n\r\nconst championsSound = new UIfx(champions);\r\nconst AstronomiaSound = new UIfx(Astronomia);\r\n\r\n//const audio = new Audio('tick.mp3');\r\n\r\n\r\nconst Ruleta = () => {\r\n    const [mostrarGanador, setMostrarGanador] = useState(false);\r\n    const [girando, setGirando] = useState('GIRAR LA RULETA');\r\n    const [ganador, setganador] = useState('-');\r\n    const [estadoGanador, setestadoGanador] = useState('');\r\n    const [nro, setNro] = useState('0');\r\n    const [img, setImg] = useState('0');\r\n    var objRuleta;\r\n    var winningSegment;\r\n    var distnaciaX = 150;\r\n    var distnaciaY = 50;\r\n    var ctx;\r\n    var theWheel;\r\n\r\n    useEffect(() => {\r\n        const init = async () => {\r\n            await crearRuleta();\r\n            await DibujarTriangulo()\r\n        };\r\n        init();\r\n\r\n\r\n    }, []);\r\n\r\n    const crearRuleta = () => {\r\n        theWheel = new Winwheel({\r\n            'canvasId': 'ruleta',\r\n            'outerRadius': 210,        // Set outer radius so wheel fits inside the background.\r\n            'innerRadius': 75,         // Make wheel hollow so segments dont go all way to center.\r\n            'textFontSize': 50,         // Set default font size for the segments.\r\n\r\n            // 'textOrientation' : 'vertical', // Make text vertial so goes down from the outside of wheel.\r\n            'textAlignment': 'outer',    // Align text to outside of wheel.\r\n            'numSegments': 15,         // Specify number of segments.\r\n            'segments':             // Define segments including colour and text.\r\n                [                               // font size and text colour overridden on backrupt segments.\r\n                    {'fillStyle': '#ee1c24', 'text': '1'},\r\n                    {'fillStyle': '#3cb878', 'text': '2'},\r\n                    {'fillStyle': '#f6989d', 'text': '3'},\r\n                    {'fillStyle': '#00aef0', 'text': '4'},\r\n                    {'fillStyle': '#f26522', 'text': '5'},\r\n\r\n                    {'fillStyle': '#e70697', 'text': '6'},\r\n                    {'fillStyle': '#fff200', 'text': '7'},\r\n                    {'fillStyle': '#f6989d', 'text': '8'},\r\n                    {'fillStyle': '#ee1c24', 'text': '9'},\r\n                    {'fillStyle': '#3cb878', 'text': '10'},\r\n                    {'fillStyle': '#f26522', 'text': '11'},\r\n                    {'fillStyle': '#a186be', 'text': '12'},\r\n                    {'fillStyle': '#fff200', 'text': '13'},\r\n                    {'fillStyle': '#00aef0', 'text': '14'},\r\n                    {'fillStyle': 'orange', 'text': '15'}\r\n\r\n                ],\r\n            'animation':           // Specify the animation to use.\r\n                {\r\n                    'type': 'spinToStop',\r\n                    'duration': 45,\r\n                    'spins': 45,\r\n                    'callbackFinished': 'alertPrize()',  // Function to call whent the spinning has stopped.\r\n                    'callbackAfter': 'DibujarTriangulo()',\r\n                    'callbackSound': playSound,   // Called when the tick sound is to be played.\r\n                    'soundTrigger': 'pin',      // Specify pins are to trigger the sound.\r\n\r\n                },\r\n            'pins':                // Turn pins on.\r\n                {\r\n                    'number': 15,\r\n\r\n                    'fillStyle': 'silver',\r\n                    'outerRadius': 4,\r\n                }\r\n        });\r\n    }\r\n\r\n//Funcionar la ruleta\r\n    const girarRuleta = () => {\r\n        theWheel.startAnimation();\r\n\r\n\r\n        //DibujarTriangulo()\r\n    }\r\n\r\n    const reiniciar = () => {\r\n        window.location.reload()\r\n\r\n\r\n        //DibujarTriangulo()\r\n    }\r\n    const closeModal = () => {\r\n\r\n        setMostrarGanador(false)\r\n    }\r\n    // Loads the tick audio sound in to an audio object.\r\n\r\n\r\n    // This function is called when the sound is to be played.\r\n    let audio = new Audio('tick.mp3');\r\n\r\n    function playSound() {\r\n        console.log('sonido')\r\n        //  setGirando(true);\r\n        audio.pause();\r\n        audio.currentTime = 0;\r\n\r\n        // Play the sound.\r\n        audio.play();\r\n\r\n    }\r\n\r\n    window.playSound = playSound;\r\n\r\n    // Called when the animation has finished.\r\n    function alertPrize() {\r\n\r\n\r\n        // Play the sound.\r\n\r\n        winningSegment = theWheel.getIndicatedSegment();\r\n\r\n\r\n        setMostrarGanador(true)\r\n        const demoId = document.getElementById(winningSegment.text);\r\n        setNro(winningSegment.text)\r\n        if (demoId.classList[1] == 'sindinero') {\r\n            AstronomiaSound.play()\r\n            setestadoGanador(`Hubieses Ganado !!! S/. ${demoId.classList[2]}` )\r\n            setImg(negros)\r\n            $(`#container_` + winningSegment.text).addClass('perdiste')\r\n        } else {\r\n            championsSound.play()\r\n            setestadoGanador(`Ganaste !!!  S/. ${demoId.classList[2]}`)\r\n            setImg(felicitaciones)\r\n            $(`#container_` + winningSegment.text).addClass('ganaste')\r\n        }\r\n        setganador(demoId.textContent)\r\n\r\n        $('#modalGanador').modal('show')\r\n\r\n\r\n        //  crearRuleta();\r\n    }\r\n\r\n\r\n    window.alertPrize = alertPrize;\r\n\r\n    function DibujarTriangulo() {\r\n        distnaciaX = 25;\r\n        distnaciaY = -10;\r\n        ctx = theWheel.ctx;\r\n        ctx.strokeStyle = 'navy';\r\n        ctx.fillStyle = '#000000';\r\n        ctx.lineWidth = 2;\r\n        ctx.beginPath();\r\n        ctx.moveTo(distnaciaX + 170, distnaciaY + 5);\r\n        ctx.lineTo(distnaciaX + 230, distnaciaY + 5);\r\n        ctx.lineTo(distnaciaX + 200, distnaciaY + 40);\r\n        ctx.lineTo(distnaciaX + 171, distnaciaY + 5);\r\n        ctx.stroke();\r\n        ctx.fill();\r\n        //   setGirando(true);\r\n    }\r\n\r\n    window.DibujarTriangulo = DibujarTriangulo;\r\n\r\n    return (\r\n        <>\r\n\r\n\r\n            <div className=\"\">\r\n                <div>\r\n\r\n                    <button onClick={reiniciar} type=\"button\" className=\"btn  btn-lg \" data-toggle=\"modal\"\r\n                            data-target=\"#staticBackdrop\">\r\n                        Reiniciar\r\n                    </button>\r\n                    <button onClick={girarRuleta} type=\"button\" className=\"btn btn-primary  btn-lg \" data-toggle=\"modal\"\r\n                            data-target=\"#staticBackdrop\">\r\n                        Girar la Ruleta\r\n                    </button>\r\n                    <button type=\"button\" className=\"btn  btn-lg \" data-toggle=\"modal\" data-target=\"#staticBackdrop\">\r\n                        Ganadores\r\n                    </button>\r\n                </div>\r\n                <div className=\"row ruleta-container\">\r\n                    <canvas id='ruleta' width='450' height='450'\r\n                            data-responsiveMinWidth=\"180\"\r\n                            data-responsiveScaleHeight=\"true\"   /* Optional Parameters */\r\n                            data-responsiveMargin=\"50\"\r\n                    >\r\n\r\n\r\n                    </canvas>\r\n                   \r\n\r\n                </div>\r\n\r\n\r\n                <div className=\"modal fade\" id=\"modalGanador\" data-backdrop=\"static\" data-keyboard=\"false\"\r\n                     tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"staticBackdropLabel\" aria-hidden=\"true\">\r\n                    <div className=\"modal-dialog modal-dialog-centered\">\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"modal-header\">\r\n\r\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                    <span aria-hidden=\"true\">&times;</span>\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"modal-body\">\r\n                                <img src={img} className=\"img-modal\"/>\r\n                                <h1>{nro} -> {ganador}</h1>\r\n                                <h1> {estadoGanador}</h1>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Ruleta;","import React, {useEffect, useState, useRef} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport UIfx from 'uifx';\r\n\r\nimport Astronomia from './audio/Astronomia.mp3';\r\nimport exorcist from './audio/exorcist.mp3';\r\nimport guile from './audio/guile-theme.mp3';\r\nimport psycho from './audio/psycho.mp3';\r\nimport sensual from './audio/careless-whisper.mp3';\r\nimport xfile from './audio/xfile.mp3';\r\nimport {LISTAR_JUGADORES} from \"../../actions/participantes/types\";\r\n\r\nconst AstronomiaSound = new UIfx(Astronomia);\r\nconst exorcistSound = new UIfx(exorcist);\r\nconst guileSound = new UIfx(guile);\r\nconst psychoSound = new UIfx(psycho);\r\nconst sensualSound = new UIfx(sensual);\r\nconst xfileSound = new UIfx(xfile);\r\n\r\nconst RuletaContainer = ({children}) => {\r\n\r\n\r\n    const participantes = useSelector(state => state.participantes);\r\n    const [participantess, setParticipantes] = useState(participantes);\r\n\r\n    const playSound = (sound) => {\r\n\r\n        switch (sound) {\r\n            case 'AstronomiaSound':\r\n                AstronomiaSound.play();\r\n                break;\r\n            case 'exorcistSound':\r\n                exorcistSound.play();\r\n                break;\r\n            case 'guileSound':\r\n                guileSound.play();\r\n                break;\r\n            case 'psychoSound':\r\n                psychoSound.play();\r\n                break;   \r\n                case 'sensualSound':\r\n                    sensualSound.play();\r\n                break;      \r\n                case 'xfileSound':\r\n                    xfileSound.play();\r\n                break;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <main role=\"main\" className=\"col-md-8 ml-sm-auto col-lg-9 px-md-4\">\r\n                <nav className=\"navbar navbar-expand-lg navbar-light bg-light rounded\">\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\r\n                            data-target=\"#navbarsExample10\" aria-controls=\"navbarsExample10\" aria-expanded=\"false\"\r\n                            aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n\r\n                    <div className=\"collapse navbar-collapse justify-content-md-center\" id=\"navbarsExample10\">\r\n                        <ul className=\"navbar-nav\">\r\n\r\n                            <li className=\"nav-item dropdown\">\r\n                                <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"dropdown10\" data-toggle=\"dropdown\"\r\n                                   aria-haspopup=\"true\" aria-expanded=\"false\">Music</a>\r\n                                <div className=\"dropdown-menu\" aria-labelledby=\"dropdown10\">\r\n                                    <a className=\"dropdown-item\" href=\"#\" onClick={()=> playSound('AstronomiaSound')}>Negro Meme</a>\r\n                                    <a className=\"dropdown-item\" href=\"#\" onClick={()=> playSound('sensualSound')}>Sensual</a>\r\n                                    <a className=\"dropdown-item\" href=\"#\" onClick={()=> playSound('xfileSound')}>XFiles</a>\r\n                                    <a className=\"dropdown-item\" href=\"#\" onClick={()=> playSound('exorcistSound')}>Exorcista</a>\r\n                                    <a className=\"dropdown-item\" href=\"#\" onClick={()=> playSound('psychoSound')}>Terror</a>\r\n                                    <a className=\"dropdown-item\" href=\"#\" onClick={()=> playSound('guileSound')}>Guille</a>\r\n                                </div>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </nav>\r\n                <div className=\"\">\r\n                    {children}\r\n                </div>\r\n            </main>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default RuletaContainer;","import React from 'react';\r\nimport Siderbar from \"../siderbar/Siderbar\";\r\nimport ListaParticipantes from \"../siderbar/ListaParticipantes\";\r\nimport Ruleta from \"../ruleta/Ruleta\";\r\nimport RuletaContainer from \"../ruleta/RuletaContainer\";\r\n\r\n\r\nconst Viruleta = () => {\r\n    return (\r\n        <>\r\n            <div className=\"row\">\r\n                <Siderbar>\r\n                    <ListaParticipantes/>\r\n                </Siderbar>\r\n                <RuletaContainer>\r\n                    <Ruleta/>\r\n                </RuletaContainer>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Viruleta;","import React from 'react';\nimport {Provider} from 'react-redux';\nimport store from './store/index';\nimport './index.css';\nimport Viruleta from \"./components/Viruleta/Viruleta\";\n\nfunction App() {\n  return (\n      <Provider store={store}>\n        <Viruleta/>\n      </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}